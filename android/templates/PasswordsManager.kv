#: import Thread threading.Thread


PasswordsManager:
    id: pm
    name: 'pm'

    MDFloatLayout:
        id: layout

        cols: 1
        MDBoxLayout:
            orientation: 'vertical'
            pos_hint: {"center_x": .4+.1, "center_y": .4+.1}

            MDToolbar:
                id: tool_bar
                name: 'tool_bar'

                title: 'PasswordsManager'
                elevation: 10
                pos_hint: {"top": 1}
                md_bg_color: (32/255, 74/255, 93/255, 1)
                specific_text_color: (1, 1, 1, 1)

            MDTabs:
                id: tabs
                name: 'tabs'

                tab_hint_x: True
                background_color: (32/255, 74/255, 93/255, 1)

                Information:
                    id: Information
                    name: 'information'

                    icon: 'information-outline'
                    title: 'Cuenta'

                    MDBoxLayout:
                        orientation: 'vertical'
                        padding: dp(5), dp(5), dp(5), dp(5)
                        spacing: dp(5)

                        MDLabel:
                            text: "[b][size=20]Datos de la Cuenta[/size][/b]"
                            markup: True
                            size_hint_y: .2

                        MDLabel:
                            text: '[size=20]Usuario[/size]'
                            markup: True
                            size_hint_y: .15

                        MDGridLayout:
                            cols: 2
                            spacing: dp(5)
                            size_hint_y: .15

                            TextField:
                                id: username
                                name: 'username'

                                hint: 'Nombre de Usuario'
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [username.ids.input]
                                data: {"pressed": upd_username.name, "username": f"{username.content}"}
                                action: "upd_username"

                            MDRaisedButton:
                                id: upd_username
                                name: 'upd_username'

                                text: 'Actualizar'
                                md_bg_color: (34/255, 98/255, 103/255, 1)
                                on_press:
                                    load = Thread(target=app.loading, args=(loading,))
                                    load.start()
                                on_release:
                                    upd = Thread(target=root.updUsername, args=({"pressed": upd_username.name.name, "username": f"{username.content}"},))
                                    upd.start()

                        MDLabel:
                            text: '[size=20]Contraseña[/size]'
                            markup: True
                            size_hint_y: .15

                        MDGridLayout:
                            cols: 2
                            spacing: dp(5)
                            size_hint_y: .45

                            TextField:
                                id: passw
                                name: 'passw'

                                hint: 'Contraseña Actual'
                                is_password: True
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [passw.ids.input, passw1.ids.input, passw2.ids.input]
                                data: {"pressed": upd_password.name, "password": f"{passw.content}", "new_password1": f"{passw1.content}", "new_password2": f"{passw2.content}"}
                                action: "upd_password"

                            Button:
                                text: ''
                                background_color: (0, 0, 0, 0)
                                size_hint: None, None
                                size: upd_username.size

                            TextField:
                                id: passw1
                                name: 'pass1'

                                hint: 'Nueva contraseña'
                                is_password: True
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [passw.ids.input, passw1.ids.input, passw2.ids.input]
                                data: {"pressed": upd_password.name, "password": f"{passw.content}", "new_password1": f"{passw1.content}", "new_password2": f"{passw2.content}"}
                                action: "upd_password"

                            Button:
                                text: ''
                                background_color: (0, 0, 0, 0)
                                size_hint: None, None
                                size: upd_username.size

                            TextField:
                                id: passw2
                                name: 'passw2'

                                hint: 'Confirmar nueva contraseña'
                                is_password: True
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [passw.ids.input, passw1.ids.input, passw2.ids.input]
                                data: {"pressed": upd_password.name, "password": f"{passw.content}", "new_password1": f"{passw1.content}", "new_password2": f"{passw2.content}"}
                                action: "upd_password"

                            MDRaisedButton:
                                id: upd_password
                                name: 'upd_password'

                                text: 'Actualizar'
                                md_bg_color: (34/255, 98/255, 103/255, 1)
                                on_press:
                                    load = Thread(target=app.loading, args=(loading,))
                                    load.start()
                                on_release:
                                    func = Thread(target=root.updPassword, args=({"pressed": upd_password.name, "password": f"{passw.content}", "new_password1": f"{passw1.content}", "new_password2": f"{passw2.content}"},))
                                    func.start()

                        MDGridLayout:
                            cols: 1
                            spacing: dp(-15)

                            canvas.before:
                                Color:
                                    rgb: (0, 0, 0)
                                Line:
                                    points: [self.pos[0], self.size[1]-15, self.size[0], self.size[1]-15]
                                    width: 1.2

                            MDLabel:
                                text: "Si desea eliminar su cuenta escriba la frase [color=#ff0000][b]Eliminar mi Cuenta[/b][/color] en el siguiente campo y posteriormente de clic en \"Eliminar\". Tome en cuenta que una vez seguido estos pasos ya no volvera a tener acceso a ninguna de sus contraseñas."
                                md_bg_color: (0, 0, 0, 0)
                                markup: True

                            MDGridLayout:
                                cols: 3
                                spacing: dp(5)

                                TextField:
                                    id: msg
                                    name: 'msg'

                                    hint: 'Escribir mensaje'
                                    size_hint_y: None
                                    size: self.size[0], upd_username.size[1]
                                    sc: "pm"
                                    actual: {"name": self.name, "field": self.ids.input}
                                    fields: [msg.ids.input, del_pass.ids.input]
                                    data: {"pressed": del_account.name, "msg": f"{msg.content}", "password": f"{del_pass.content}"}
                                    action: "del_account"

                                TextField:
                                    id: del_pass
                                    name: 'del_pass'

                                    hint: 'Contraseña'
                                    size_hint_y: None
                                    size: self.size[0], upd_username.size[1]
                                    is_password: True
                                    sc: "pm"
                                    actual: {"name": self.name, "field": self.ids.input}
                                    fields: [msg.ids.input, del_pass.ids.input]
                                    data: {"pressed": del_account.name, "msg": f"{msg.content}", "password": f"{del_pass.content}"}
                                    action: "del_account"

                                MDRaisedButton:
                                    id: del_account
                                    name: 'del_account'

                                    text: 'Eliminar Cuenta'
                                    md_bg_color: (34/255, 98/255, 103/255, 1)
                                    on_press:
                                        load = Thread(target=app.loading, args=(loading,))
                                        load.start()
                                    on_release:
                                        func = Thread(target=root.removeAccount, args=({"pressed": del_account.name, "msg": f"{msg.content}", "password": f"{del_pass.content}"},))
                                        func.start()

                Passwords:
                    id: passwords
                    name: 'passwords'

                    icon: 'key'
                    title: 'Contraseñas'

                    MDBoxLayout:
                        orientation: 'vertical'
                        spacing: dp(5)
                        padding: dp(5), dp(5), dp(5), dp(5)

                        MDLabel:
                            text: '[b][size=20]Registrar Contraseña[/size][/b]'
                            markup: True
                            size_hint_y: .1

                        MDGridLayout:
                            cols: 3
                            size_hint_y: .1
                            spacing: dp(5)

                            TextField:
                                id: key
                                name: 'key'

                                hint: 'Key'
                                size_hint_y: None
                                size: self.size[0], upd_username.size[1]
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [key.ids.input, value.ids.input]
                                data: {"key": f"{key.content}", "value": f"{value.content}"}

                            TextField:
                                id: value
                                name: 'value'

                                hint: 'Value'
                                size_hint_y: None
                                size: self.size[0], upd_username.size[1]
                                is_password: True
                                sc: "pm"
                                actual: {"name": self.name, "field": self.ids.input}
                                fields: [key.ids.input, value.ids.input]
                                data: {"key": f"{key.content}", "value": f"{value.content}"}

                            RoundedButton:
                                id: save_password
                                name: 'save_password'

                                text: 'Guardar Contraseña'
                                size_hint_y: None
                                size: self.size[0], value.size[1]
                                md_bg_color: (34/255, 98/255, 103/255, 1)
                                on_press:
                                    load = Thread(target=app.loading, args=(loading,))
                                    load.start()
                                on_release:
                                    save = Thread(target=root.savePassword, args=({"key": f"{key.content}", "value": f"{value.content}"},))
                                    save.start()

                        MDLabel:
                            text: '[b][size=20]Contraseñas Registradas[/size][/b]'
                            markup: True
                            size_hint_y: .1

                        MDFloatLayout:
                            cols: 1
                            RecycleView:
                                id: recycle
                                name: 'recycle'

                                key_viewclass: 'viewclass'
                                pos_hint: {'center_x': .5, 'center_y': .5}
                                key_size: 'height'

                                RecycleGridLayout:
                                    id: recycle_grid
                                    name: 'recycle_grid'

                                    cols: 1
                                    default_size: None, dp(48)
                                    default_size_hint: 1, None
                                    size_hint_y: None
                                    height: self.minimum_height
                                    row_default_height: 10

                            MDLabel:
                                id: no_passwords
                                name: 'no_passwords'

                                text: '[size=18][color=#0000ff][b]¡No hay contraseñas para mostrar![/b][/color][/size]'
                                pos_hint: {'center_x': .5, 'center_y': 1}
                                markup: True
                                halign: 'center'
                                valign: 'top'
        MDRaisedButton:
            id: close_session
            name: "close_session"

            text: "Salir"
            md_bg_color: (.8, 0, 0, .4+.1)
            pos: layout.size[0]-self.size[0]-4-1, layout.size[1]-self.size[1]-4-1
            on_release:
                app.to_empty(
                [
                key.ids.input,
                value.ids.input,
                username.ids.input,
                passw.ids.input,
                passw1.ids.input,
                passw2.ids.input,
                msg.ids.input,
                del_pass.ids.input
                ], recycle
                )
                app.setToken("")
                app.root.current="login"

            canvas.before:
                Color:
                    rgba: (1, 1, 1, 1)
                Line:
                    rectangle: self.pos[0], self.pos[1], self.size[0], self.size[1]


        MDIconButton:
            icon: "update"
            pos: close_session.pos[0]-self.size[0]-4-1, layout.size[1]-self.size[1]
            theme_text_color: "Custom"
            text_color: (1, 1, 1, 1)
            on_press:
                load = Thread(target=app.loading, args=(loading,))
                load.start()
            on_release:
                upd = Thread(target=root.setData, args=(app.getToken(),))
                upd.start()

        MDSpinner:
            id: loading
            name: "loading"

            active: False
            size_hint: None, None
            size: dp(44+1), dp(44+1)
            pos_hint: {"center_x": .4+.1, "center_y": .4+.1}
